<UserControl x:Class="ImageEditor.MainApp.Views.Dialogs.NewCanvasDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ImageEditor.MainApp.Views.Dialogs"
             xmlns:validation="clr-namespace:ImageEditor.MainApp.ValidationRule"
             xmlns:dt="clr-namespace:DiscordThemes.WPF;assembly=DiscordThemes.WPF"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="720" d:DesignWidth="1280"
             d:DataContext="{d:DesignInstance local:NewCanvasDialog, IsDesignTimeCreatable=True}"
             DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <!--<d:DesignerProperties.DesignStyle>
        <Style TargetType="{x:Type UserControl}">
            <Setter Property="Visibility" Value="Collapsed"/>
        </Style>
    </d:DesignerProperties.DesignStyle>-->

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DiscordTextBlockBody1}">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiscordTextBox1}">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="MinWidth" Value="60"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="dt:TextBoxAssist.HintVisibility" Value="Collapsed"/>
        </Style>

        <ExponentialEase x:Key="DialogEaseIn" EasingMode="EaseIn"/>
        <ExponentialEase x:Key="DialogEaseOut" EasingMode="EaseOut"/>

        <Storyboard x:Key="DialogLoadedSb" Duration="0:0:0.2">
            <ColorAnimation Storyboard.TargetName="bg"
                        Storyboard.TargetProperty="Color"
                        Duration="0:0:0.2"
                        From="#00000000"
                        To="#D8000000"
                        EasingFunction="{StaticResource DialogEaseIn}"/>
            <DoubleAnimation Storyboard.TargetName="border"
                         Storyboard.TargetProperty="Opacity"
                         Duration="0:0:0.2"
                         From="0"
                         To="1"
                         EasingFunction="{StaticResource DialogEaseIn}"/>
            <DoubleAnimation Storyboard.TargetName="scaleTrans"
                             Storyboard.TargetProperty="ScaleX"
                             Duration="0:0:0.2"
                             From="0"
                             To="1"
                             EasingFunction="{StaticResource DialogEaseIn}"/>
            <DoubleAnimation Storyboard.TargetName="scaleTrans"
                             Storyboard.TargetProperty="ScaleY"
                             Duration="0:0:0.2"
                             From="0"
                             To="1"
                             EasingFunction="{StaticResource DialogEaseIn}"/>
        </Storyboard>

        <Storyboard x:Key="DialogUnloadedSb" Duration="0:0:0.2">
            <ColorAnimation Storyboard.TargetName="bg"
                            Storyboard.TargetProperty="Color"
                            Duration="0:0:0.2"
                            To="#00000000"
                            From="#D8000000"
                            EasingFunction="{StaticResource DialogEaseOut}"/>
            <DoubleAnimation Storyboard.TargetName="border"
                             Storyboard.TargetProperty="Opacity"
                             Duration="0:0:0.2"
                             To="0"
                             From="1"
                             EasingFunction="{StaticResource DialogEaseOut}"/>
            <DoubleAnimation Storyboard.TargetName="scaleTrans"
                             Storyboard.TargetProperty="ScaleX"
                             Duration="0:0:0.2"
                             To="0"
                             From="1"
                             EasingFunction="{StaticResource DialogEaseOut}"/>
            <DoubleAnimation Storyboard.TargetName="scaleTrans"
                             Storyboard.TargetProperty="ScaleY"
                             Duration="0:0:0.2"
                             To="0"
                             From="1"
                             EasingFunction="{StaticResource DialogEaseOut}"/>
        </Storyboard>
    </UserControl.Resources>

    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard Storyboard="{StaticResource DialogLoadedSb}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <UserControl.Background>
        <SolidColorBrush x:Name="bg" Color="#D8000000"/>
    </UserControl.Background>
    
    <Border x:Name="border"
            Background="{StaticResource BackgroundTertiary}"
            CornerRadius="8"
            Padding="20"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            RenderTransformOrigin="0.5,0.5">
        <Border.RenderTransform>
            <ScaleTransform x:Name="scaleTrans" ScaleX="1" ScaleY="1"/>
        </Border.RenderTransform>
        
        <StackPanel>
            <dt:Block Header="NEW BLANK CANVAS">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Width"/>
                    <TextBox x:Name="WidthTBox">
                        <TextBox.Text>
                            <Binding Path="PreviewWidth"
                                     Mode="TwoWay"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NumberRangeRule Type="UInt" GreaterThan="0"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="px"/>

                    <md:PackIcon Kind="Close"
                                 Foreground="{StaticResource TextNormal}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="10,0,10,0"/>

                    <TextBlock Text="Height"/>
                    <TextBox x:Name="HeightTBox">
                        <TextBox.Text>
                            <Binding Path="PreviewHeight"
                                     Mode="TwoWay"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NumberRangeRule Type="UInt" GreaterThan="0"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBlock Text="px"/>
                </StackPanel>
            </dt:Block>

            <dt:Block Header="FROM FILE"
                      Margin="0,40,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBox x:Name="FileTBox"
                             Text="{Binding FileName, Mode=OneWay}"
                             IsReadOnly="True"
                             Margin="0,0,10,0"/>
                    <Button Grid.Column="1"
                            Content="Browse"
                            Click="BrowseBtn_Click"/>
                </Grid>
            </dt:Block>

            <Button Content="Confirm"
                    Command="{Binding ConfirmCommand}"
                    HorizontalAlignment="Center"
                    IsDefault="True"
                    Margin="0,20,0,0"
                    Style="{StaticResource ButtonFlatSolidCommand}"/>
        </StackPanel>
    </Border>
</UserControl>
